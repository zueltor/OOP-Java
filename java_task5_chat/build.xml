<project>
    <property name="src.dir"     value="src"/>
    <property name="build.dir"   value="build/"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>

    <property name="test.src.dir"   value="test"/>
    <property name="test.build.dir" value="${build.dir}/test"/>

    <property name="lib.dir" value="lib/"/>

	<!-- set jar name here -->
	<property name="clientjar.path"    value="${jar.dir}/client.jar"/>
    <property name="serverjar.path"    value="${jar.dir}/server.jar"/>

	<!-- Change your main class here: -->
	<property name="clientmain.class"  value="ru.nsu.g.mustafin.chat.client.ClientMain" />
    <property name="servermain.class"  value="ru.nsu.g.mustafin.chat.server.ServerMain" />

    <path id="classpath.test">
        <pathelement location="${lib.dir}/junit-4.12.jar"/>
        <pathelement location="${lib.dir}/hamcrest-core-1.3.jar"/>
        <pathelement location="${classes.dir}"/>
    </path>

    <path id="classpath.main">
        <!-- add libraries here: -->
        <pathelement location="${lib.dir}/gson-2.8.6.jar"/>
    </path>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}">
            <classpath refid="classpath.main"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <!-- add target jars here-->

    <!-- Example:
    <target name="clientjar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <manifestclasspath property="clientjar.classpath" jarfile="${clientjar.path}">
            <classpath refid="classpath.main"/>
        </manifestclasspath>
        <jar destfile="${clientjar.path}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${clientmain.class}"/>
                <attribute name="Class-Path" value="${clientjar.classpath}" />
            </manifest>
        </jar>
    </target>
    -->

    <target name="clientjar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <manifestclasspath property="clientjar.classpath" jarfile="${clientjar.path}">
            <classpath refid="classpath.main"/>
        </manifestclasspath>
        <jar destfile="${clientjar.path}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${clientmain.class}"/>
                <attribute name="Class-Path" value="${clientjar.classpath}" />
            </manifest>
        </jar>
    </target>

    <target name="serverjar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <manifestclasspath property="serverjar.classpath" jarfile="${serverjar.path}">
            <classpath refid="classpath.main"/>
        </manifestclasspath>
        <jar destfile="${serverjar.path}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${servermain.class}"/>
                <attribute name="Class-Path" value="${serverjar.classpath}" />
            </manifest>
        </jar>
    </target>

    <!-- add run targets here. Example:
    <target name="clientrun" depends="clientjar">
        <java jar="${clientjar.path}" fork="true"/>
    </target>
    -->

    <target name="clientrun" depends="clientjar">
        <java jar="${clientjar.path}" fork="true"/>
    </target>

    <target name="serverrun" depends="serverjar">
        <java jar="${serverjar.path}" fork="true"/>
    </target>

    <target name="jclientrun" depends="clientjar">
        <java jar="${clientjar.path}" fork="true">
            <arg line="-j"/>
        </java>
    </target>

    <target name="jserverrun" depends="serverjar">
        <java jar="${serverjar.path}" fork="true">
            <arg line="-j"/>
        </java>
    </target>

    <!-- -->

    <target name="clean">
        <delete dir="build"/>
    </target>

    <target name="test-compile" depends="compile">
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
            <classpath refid="classpath.test"/>
        </javac>
		<copy todir="${test.build.dir}">
			<fileset dir="${test.src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
    </target>

    <target name="test" depends="test-compile">
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${test.build.dir}"/>
            </classpath>
            <formatter type="brief" usefile="false" />
            <batchtest>
                <fileset dir="${test.build.dir}" includes="**/*Test.class" />
            </batchtest>
        </junit>
    </target>
</project>
