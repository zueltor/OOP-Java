package ru.nsu.g.mustafin.chat.client.gui;

import ru.nsu.g.mustafin.chat.client.Client;
import ru.nsu.g.mustafin.chat.utils.exceptions.ServerErrorException;
import ru.nsu.g.mustafin.chat.utils.exceptions.UnknownResponseException;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;

public class ChatView extends JFrame implements Updater {

    private JTextArea chatBox;
    private JPanel content;
    private JTextField messageField;
    private JButton sendButton;
    private JTextArea usersBox;
    private Client client;
    private ArrayList<String> user_names;

    public ChatView(Client client) {
        super("Chat");
        this.client = client;
        user_names = new ArrayList<>();
        client.setView(this);
        chatBox.setEditable(false);
        usersBox.setEditable(false);
        content.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                client.close();
                //new MenuView();
            }
        });
        initListeners();

        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setContentPane(content);
        setMinimumSize(new Dimension(500, 500));
        this.pack();
    }

    void initListeners() {
        sendButton.addActionListener(this::action);
        messageField.addActionListener(this::action);
    }

    void action(ActionEvent actionEvent) {
        String text = messageField.getText();
        messageField.setText("");

        try {
            client.sendText(text);
        } catch (ServerErrorException | UnknownResponseException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } catch (InterruptedException | IOException e) {
            JOptionPane.showMessageDialog(this, "Server stopped working");
            this.dispose();
        }
    }

    public void unhide() {
        setVisible(true);
    }

    private void updateUserBox() {
        usersBox.setText("");
        for (var user_name : user_names) {
            usersBox.append(user_name + "\n");
        }
    }

    @Override
    public void updateChat(String text) {
        chatBox.append(text);
    }

    @Override
    public void updateUserList(String[] users) {
        user_names.clear();
        usersBox.setText("");
        user_names.addAll(Arrays.asList(users));
        updateUserBox();
    }

    @Override
    public void addUser(String user) {
        if (!user_names.contains(user)) {
            user_names.add(user);
            updateUserBox();
        }
    }

    @Override
    public void removeUser(String user) {
        user_names.remove(user);
        updateUserBox();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        content = new JPanel();
        content.setLayout(new GridBagLayout());
        chatBox = new JTextArea();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 10.0;
        gbc.weighty = 10.0;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(chatBox, gbc);
        messageField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        content.add(messageField, gbc);
        sendButton = new JButton();
        sendButton.setText("Send");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        content.add(sendButton, gbc);
        usersBox = new JTextArea();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(usersBox, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Chat Box");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        content.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Users online");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        content.add(label2, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        content.add(spacer1, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return content;
    }
}
